name: Build images

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    strategy:
      fail-fast: false
      matrix:
        image:
        - image: ghcr.io/sjinks/alpine-vcpkg
          dockerfile: ./Dockerfile
          scope: alpine-vcpkg
        - image: ghcr.io/sjinks/alpine-vcpkg-cross
          dockerfile: ./Dockerfile.cross
          scope: alpine-vcpkg-cross
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ github.base_ref == null }}

      - name: Get Alpine version
        id: getversion
        run: echo "version=$(head -n 1 Dockerfile | sed -r -e 's/^([^:]+):([^ @$-]+).*/\2/')" >> "${GITHUB_OUTPUT}"

      - name: Build and push image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: push
        with:
          context: .
          file: ${{ matrix.image.dockerfile }}
          push: ${{ github.base_ref == null }}
          tags: ${{ matrix.image.image }}:${{ steps.getversion.outputs.version }}
          cache-from: type=gha,scope=${{ matrix.image.scope }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image.scope }}
          no-cache: ${{ github.event_name == 'workflow_dispatch' }}

      - name: Attest provenance
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a # v3.0.0
        with:
          subject-name: ${{ matrix.image.image }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
        if: ${{ github.base_ref == null }}
